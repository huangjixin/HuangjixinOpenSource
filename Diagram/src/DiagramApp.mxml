<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:graphic="com.hjx.graphic.*"
			   xmlns:local="*"
			   xmlns:diagram="com.hjx.diagram.*"
			   xmlns:editor="com.hjx.diagram.editor.*"
			   xmlns:graphlayout="com.hjx.graphic.graphlayout.*"
			   minWidth="955" minHeight="600"
			   creationComplete="application1_creationCompleteHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import com.hjx.graphic.Node;
			
			import mx.collections.ArrayCollection;
			import mx.collections.HierarchicalData;
			import mx.events.FlexEvent;
			
			[Bindable]
			private var hac:ArrayCollection = new ArrayCollection([{nodeType:"graph",label:"root",children:[{nodeType:"node",label:"node0",x:0,y:0},{nodeType:"node",label:"node1",x:50,y:100}]}]);
			
			protected function node1_clickHandler(event:MouseEvent):void
			{
				if(node.selectable){
					node.selected = !node.selected;
					link0.setStyle("startArrowVisible",node.selected);
					link.setStyle("startArrowVisible",node.selected);
					link0.setStyle("endArrowVisible",node.selected);
					link.setStyle("endArrowVisible",node.selected);
				}
			}
			
			protected function application1_creationCompleteHandler(event:FlexEvent):void
			{
				this.addEventListener(MouseEvent.MOUSE_MOVE, onMoveHandler);
				node.addEventListener(MouseEvent.MOUSE_DOWN,onNodeMouseDown);
//				trace(link.width+","+link.height);
			}
			
			protected function onMoveHandler(event:MouseEvent):void
			{
				var currentObject:Object = graph.getHitRenderer(event.target);
				if(currentObject){
//					trace(currentObject["id"]);
				}
				
			}
			
			protected function onNodeMouseDown(event:MouseEvent):void
			{
				node.startDrag();
				node.addEventListener(MouseEvent.MOUSE_UP,onNodeMouseUp);
				node.addEventListener(MouseEvent.MOUSE_MOVE,onNodeMouseMove);
			}
			
			protected function onNodeMouseUp(event:MouseEvent):void
			{
				node.stopDrag();
				node.removeEventListener(MouseEvent.MOUSE_UP,onNodeMouseUp);
				node.removeEventListener(MouseEvent.MOUSE_MOVE,onNodeMouseMove);
			}
			
			protected function onNodeMouseMove(event:MouseEvent):void
			{
				var node:Node = null;
				if(event.currentTarget is Node){
					node = event.currentTarget as Node;
					node.refresh();
				}
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<fx:XML id="data">
			<graph label="root">  
				<node x="50" y="50" label="Node 1"/>
				<node x="50" y="200" label="Node 2"/>
				<node x="50" y="120" label="Node 3"/>
				<graph x="200" y="50" label="Graph 1">
					<node x="10" y="0" label="Node 11"/>
					<node x="10" y="50" label="Node 12"/>
					<graph x="100" y="60" label="Graph 2">
						<node x="0" y="0" label="Node 21"/>
						<node x="60" y="60" label="Node 22"/>
					</graph>  
				</graph>
			</graph>
		</fx:XML>
		<mx:HierarchicalCollectionView id="hcv" showRoot="false"
									   source="{new HierarchicalData(data)}"/>
	</fx:Declarations>
	<editor:DiagramEditor id="diagramEditor" width="100%" height="100%">
		<diagram:Diagram id="diagram1" width="100%" height="100%" automaticGraphLayout="false"
						 labelField="@label" nodeDataProvider="{hcv}" selectionMode="multiple"
						 xLocationField="@x" yLocationField="@y">
			<diagram:nodeLayout>
				<graphlayout:HierarchicalLayout id="hierarchicalLayout" flowDirection="right"/>
			</diagram:nodeLayout>
		</diagram:Diagram>
	</editor:DiagramEditor>
	<diagram:Diagram id="diagram" width="100%" height="100%"/>
	<graphic:Graph id="graph" x="{width/2}" width="50%" height="100%">
		<graphic:SubGraph id="subGraph1" y="200" width="200" height="200">
			<graphic:Link id="link" endArrowVisible="true" endNode="{node}" startArrowVisible="true"
						  startNode="{node2}" strokeWidth="2"/>
			<graphic:Link id="link0" endNode="{node4}" startNode="{node}" strokeWidth="2" startArrowVisible="true"/>
			<local:BPMNBtn id="node2" x="10" y="20" label="node2" skinClass="skins.BPMNBtnSkin"/>
			<local:BPMNBtn id="node3" x="50" y="100" label="node3" skinClass="skins.BPMNBtnSkin"/>
		</graphic:SubGraph>
		<local:BPMNBtn id="node" x="300" y="400" width="300" height="300" click="node1_clickHandler(event)"/>
		<local:BPMNBtn id="node4" x="500" y="200"/>
		<graphic:Link id="link3" endArrowVisible="true"  startArrowVisible="true"
					   strokeWidth="2" fallbackStartPoint="{new Point(20,30)}"
					   fallbackEndPoint="{new Point(120,30)}" />
	</graphic:Graph>
</s:Application>
