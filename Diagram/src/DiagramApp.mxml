<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:graphic="com.hjx.graphic.*"
			   xmlns:local="*"
			   xmlns:diagram="com.hjx.diagram.*"
			   xmlns:editor="com.hjx.diagram.editor.*"
			   xmlns:graphlayout="com.hjx.graphic.graphlayout.*"
			   minWidth="955" minHeight="600"
			   creationComplete="application1_creationCompleteHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import com.hjx.graphic.Node;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			protected function node1_clickHandler(event:MouseEvent):void
			{
				if(node.selectable){
					node.selected = !node.selected;
				}
			}
			
			protected function application1_creationCompleteHandler(event:FlexEvent):void
			{
				this.addEventListener(MouseEvent.MOUSE_MOVE, onMoveHandler);
				node.addEventListener(MouseEvent.MOUSE_DOWN,onNodeMouseDown);
//				trace(link.width+","+link.height);
			}
			
			protected function onMoveHandler(event:MouseEvent):void
			{
				var currentObject:Object = graph.getHitRenderer(event.target);
				if(currentObject){
//					trace(currentObject["id"]);
				}
				
			}
			
			protected function onNodeMouseDown(event:MouseEvent):void
			{
				node.startDrag();
				node.addEventListener(MouseEvent.MOUSE_UP,onNodeMouseUp);
				node.addEventListener(MouseEvent.MOUSE_MOVE,onNodeMouseMove);
			}
			
			protected function onNodeMouseUp(event:MouseEvent):void
			{
				node.stopDrag();
				node.removeEventListener(MouseEvent.MOUSE_UP,onNodeMouseUp);
				node.removeEventListener(MouseEvent.MOUSE_MOVE,onNodeMouseMove);
			}
			
			protected function onNodeMouseMove(event:MouseEvent):void
			{
				var node:Node = null;
				if(event.currentTarget is Node){
					node = event.currentTarget as Node;
				}
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<editor:DiagramEditor id="diagramEditor" width="100%" height="100%">
		<diagram:Diagram id="diagram1" width="100%" height="100%" automaticGraphLayout="false"
						 selectionMode="multiple">
			<diagram:nodeLayout>
				<graphlayout:HierarchicalLayout id="hierarchicalLayout" flowDirection="right"/>
			</diagram:nodeLayout>
		</diagram:Diagram>
	</editor:DiagramEditor>
	<diagram:Diagram id="diagram" width="100%" height="100%"/>
	<graphic:Graph id="graph" width="50%" height="50%" horizontalCenter="0" verticalCenter="0">
		<local:BPMNBtn id="node" click="node1_clickHandler(event)" horizontalCenter="0"
					   skinClass="skins.BPMNBtnSkin" verticalCenter="0"/>
		<local:BPMNBtn id="node1" label="node1" click="node1_clickHandler(event)"
					   horizontalCenter="20" skinClass="skins.BPMNBtnSkin" verticalCenter="0"/>
		<graphic:SubGraph id="subGraph" width="200" height="200">
			<graphic:SubGraph id="subGraph1" width="150" height="150">
				<graphic:Link id="link" endNode="{node3}" fallbackEndPoint="{new Point(0,0)}"
							  fallbackStartPoint="{new Point(-100,-100)}" startNode="{node2}"
							  strokeWidth="4"/>
				<local:BPMNBtn id="node2" bottom="0" label="node2" click="node1_clickHandler(event)"
							   horizontalCenter="20" skinClass="skins.BPMNBtnSkin"/>
				<local:BPMNBtn id="node3" label="node3" click="node1_clickHandler(event)"
							   skinClass="skins.BPMNBtnSkin"/>
			</graphic:SubGraph>
		</graphic:SubGraph>
	</graphic:Graph>
</s:Application>
